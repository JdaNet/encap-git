{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASSI\\\\Desktop\\\\encap\\\\client\\\\src\\\\pages\\\\CountDown.js\";\nimport React from \"React\";\nimport { useEffect, useRef, useState } from \"react\";\n\nconst formatTime = time => {\n  //let minutes = Math.floor(time / 60)\n  let seconds = Math.floor(time); //if(minutes <=10) minutes = '0'+  minutes;\n\n  if (seconds <= 10) seconds = '' + seconds;\n  return seconds;\n};\n\nexport default function CountDown({\n  seconds\n}) {\n  const [countdown, setCountdown] = useState(seconds);\n  const timerId = useRef();\n  useEffect(() => {\n    timerId.current = setInterval(() => {\n      setCountdown(prev => prev - 1);\n    }, 1000);\n    return () => clearInterval(timerId.current);\n  }, []);\n  useEffect(() => {\n    if (countdown <= 0) {\n      clearInterval(timerId.current);\n      alert(\"Tiempo Culminado\");\n    }\n  }, [countdown]);\n  return /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, \"Esta ventana se cerrar\\xE1 en \", formatTime(countdown), \" segundos\");\n}","map":{"version":3,"sources":["C:/Users/ASSI/Desktop/encap/client/src/pages/CountDown.js"],"names":["React","useEffect","useRef","useState","formatTime","time","seconds","Math","floor","CountDown","countdown","setCountdown","timerId","current","setInterval","prev","clearInterval","alert"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,EAAmBC,MAAnB,EAA2BC,QAA3B,QAA0C,OAA1C;;AAGA,MAAMC,UAAU,GAAIC,IAAD,IAAU;AACzB;AACA,MAAIC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWH,IAAX,CAAd,CAFyB,CAIzB;;AACA,MAAGC,OAAO,IAAI,EAAd,EAAkBA,OAAO,GAAG,KAAIA,OAAd;AAClB,SAAQA,OAAR;AACH,CAPD;;AASA,eAAe,SAASG,SAAT,CAAmB;AAACH,EAAAA;AAAD,CAAnB,EAA6B;AACxC,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAACG,OAAD,CAA1C;AACA,QAAMM,OAAO,GAAGV,MAAM,EAAtB;AAEAD,EAAAA,SAAS,CAAC,MAAK;AACXW,IAAAA,OAAO,CAACC,OAAR,GAAkBC,WAAW,CAAC,MAAK;AAC/BH,MAAAA,YAAY,CAACI,IAAI,IAAIA,IAAI,GAAC,CAAd,CAAZ;AACH,KAF4B,EAE1B,IAF0B,CAA7B;AAIA,WAAM,MAAMC,aAAa,CAACJ,OAAO,CAACC,OAAT,CAAzB;AACH,GANQ,EAMP,EANO,CAAT;AAQAZ,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGS,SAAS,IAAI,CAAhB,EAAkB;AACdM,MAAAA,aAAa,CAACJ,OAAO,CAACC,OAAT,CAAb;AACAI,MAAAA,KAAK,CAAC,kBAAD,CAAL;AAEH;AACJ,GANQ,EAMN,CAACP,SAAD,CANM,CAAT;AAQA,sBAKQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAAgCN,UAAU,CAACM,SAAD,CAA1C,cALR;AAaH","sourcesContent":["import React from \"React\";\r\nimport {useEffect, useRef, useState} from \"react\";\r\n\r\n\r\nconst formatTime = (time) => {\r\n    //let minutes = Math.floor(time / 60)\r\n    let seconds = Math.floor(time)\r\n\r\n    //if(minutes <=10) minutes = '0'+  minutes;\r\n    if(seconds <= 10) seconds = ''+ seconds;\r\n    return  seconds\r\n}\r\n\r\nexport default function CountDown({seconds}){\r\n    const [countdown, setCountdown] = useState(seconds)\r\n    const timerId = useRef()\r\n\r\n    useEffect(() =>{\r\n        timerId.current = setInterval(()=> {\r\n            setCountdown(prev => prev-1)\r\n        }, 1000)\r\n\r\n        return() => clearInterval(timerId.current)\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        if(countdown <= 0){\r\n            clearInterval(timerId.current)\r\n            alert(\"Tiempo Culminado\")\r\n\r\n        }\r\n    }, [countdown])\r\n\r\n    return(\r\n        \r\n            \r\n\r\n            \r\n            <h2>Esta ventana se cerrar√° en {formatTime(countdown)} segundos</h2>\r\n\r\n      \r\n           \r\n       \r\n\r\n    )\r\n\r\n}"]},"metadata":{},"sourceType":"module"}